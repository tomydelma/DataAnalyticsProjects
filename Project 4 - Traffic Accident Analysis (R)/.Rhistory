load("C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)/Enviroment.RDataTmp")
load("C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)/.RData")
load("C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)/Enviroment.RDataTmp")
load("C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)/Enviroment.RData")
str(us_accidents)
gc()
us_accidents <- us_accidents %>% filter(City != " ")
us_accidents <- us_accidents %>% filter(Start_Lat != "" | Start_Lat != " ")
us_accidents <- us_accidents %>% select(-End_Time)
#install.packages("tidyverse") # Instalamos una librería
library("tidyverse")          # Cargamos una librería
us_accidents <- us_accidents %>% filter(City != " ")
us_accidents <- us_accidents %>% filter(Start_Lat != "" | Start_Lat != " ")
us_accidents <- us_accidents %>% select(-End_Time)
us_accidents <- us_accidents %>%
mutate(Start_Time = as.Date(Start_Time)) #Date format to column
us_accidents %>%
pull(Start_Time) %>%
min()                 #Min Date "2016-01-14"
us_accidents %>%
pull(Start_Time) %>%
min()                 #Max Date "2023-03-31"
us_accidents_17_22 <- us_accidents %>%
filter(between(Start_Time,as.Date("2017-01-01"),as.Date("2022-12-31")))
#Group the reasons in 1 column
us_accidents_17_22 <- us_accidents_17_22 %>%
mutate(Reason = pmap_chr(list(Bump, Crossing, Give_Way, Junction, No_Exit, Railway,
Roundabout, Station, Stop, Traffic_Calming, Traffic_Signal, Turning_Loop),
function(Bump, Crossing, Give_Way, Junction, No_Exit, Railway,
Roundabout, Station, Stop, Traffic_Calming, Traffic_Signal, Turning_Loop) {
reasons <- c()
if (Bump == "True") reasons <- c(reasons, "Bump")
if (Crossing == "True") reasons <- c(reasons, "Crossing")
if (Give_Way == "True") reasons <- c(reasons, "Give_Way")
if (Junction == "True") reasons <- c(reasons, "Junction")
if (No_Exit == "True") reasons <- c(reasons, "No_Exit")
if (Railway == "True") reasons <- c(reasons, "Railway")
if (Roundabout == "True") reasons <- c(reasons, "Roundabout")
if (Station == "True") reasons <- c(reasons, "Station")
if (Stop == "True") reasons <- c(reasons, "Stop")
if (Traffic_Calming == "True") reasons <- c(reasons, "Traffic_Calming")
if (Traffic_Signal == "True") reasons <- c(reasons, "Traffic_Signal")
if (Turning_Loop == "True") reasons <- c(reasons, "Turning_Loop")
if (length(reasons) == 0) return(NA_character_) else return(paste(reasons, collapse = ", "))
}))
us_accidents_17_22 <- us_accidents_17_22 %>%
select(-c(Crossing,Give_Way,Junction,No_Exit,Railway,Roundabout,Station,Stop,Traffic_Calming,Traffic_Signal,Turning_Loop))
us_accidents_17_22 <- us_accidents_17_22 %>%
select(-c(Zipcode,Description))
top_States <- us_accidents_17_22 %>%
group_by(State) %>%
summarise(Amount = n()) %>%
arrange(-Amount) %>%
mutate(prc = Amount/sum(Amount)) %>%
head(20)
top_accidents <- us_accidents_17_22 %>%
filter(State %in% top_States$State)
top_accidents <- top_accidents %>%
mutate(City = factor(City),
State = factor(State),
Weather_Condition = factor(Weather_Condition),
Reason = factor(Reason))
top_reasons <- top_accidents %>%
separate_rows(Reason, sep=",") %>%
mutate(Reason = trimws(Reason)) %>%
group_by(Reason) %>%
filter(Reason != is.na(Reason)) %>%
summarise(NumAcc = n())%>%
arrange(-NumAcc) %>%
head (20)
train_table <- top_accidents %>%
filter(Reason %in% top_reasons$Reason)
test_table <- top_accidents %>%
filter(!Reason %in% top_reasons$Reason)
str(train_table)
ggplot(train_table) +
geom_point(aes(x = State, y = Severity))
rm(us_accidents)
rm(us_accidents_17_22)
ggplot(train_table[1:100,]) +
geom_point(aes(x = State, y = Severity))
train_table %>%
group_by(State) %>%
summarise(Average_Severity = mean(Severity, na.rm = TRUE)) %>%
ggplot(aes(x = State, y = Average_Severity)) +
geom_bar()
train_table %>%
group_by(State) %>%
summarise(Average_Severity = mean(Severity, na.rm = TRUE)) %>%
ggplot(aes(x = State, y = Average_Severity)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State) %>%
summarise(Average_Severity = mean(Severity, na.rm = TRUE)) %>%
ggplot(aes(x = reorder(State,Average_Severity), y = Average_Severity)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
facet_wrap( ~ Reason)
train_table %>%
facet_wrap( ~ Reason) %>%
group_by(State) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State, Reason) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
train_table %>%
group_by(State, Reason) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(State,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
facet_wrap(~ Reason)
train_table %>%
group_by(Severity, Reason) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(Severity,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
facet_wrap(~ Reason)
train_table %>%
group_by(Severity, Reason) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Severity, y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
facet_wrap(~ Reason)
#Amount per Severity
train_table %>%
group_by(Severity) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = reorder(Severity,Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
#Amount per Severity
train_table %>%
group_by(Severity) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = (Severity), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
View(train_table)
View(train_table)
ggplot(data = train_table) +   # los gráficos nos permiten visualizar outliers
geom_point(aes(x = Start_Time, y = Severity))
ggplot(data = train_table) +
geom_point(aes(x = Start_Time, y = Severity)) +
labs(title = "Gráfico de Severidad por Tiempo de Inicio",
x = "Tiempo de Inicio",
y = "Severidad") +
theme_minimal()
train_table$Start_Time <- as.POSIXct(train_table$Start_Time)
ggplot(data = train_table) +
geom_point(aes(x = Start_Time, y = Severity)) +
labs(title = "Gráfico de Severidad por Tiempo de Inicio",
x = "Tiempo de Inicio",
y = "Severidad") +
theme_minimal()
train_table %>%
group_by(Start_Time) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Start_Time, y = Amount)) +
geom_point()
library("lubridate")
#Amount of accidents with reasons through time per month
train_table %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
ggplot(aes(x = Month_Year, y = Amount)) +
geom_point()
#Amount of accidents with reasons through time per month
train_table %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
ggplot(aes(x = Month_Year, y = Amount)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "red")
#Amount of accidents with reasons through time per month
train_table %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
ggplot(aes(x = Month_Year, y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#Amount of accidents without reasons through time per month
test_table %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
ggplot(aes(x = Month_Year, y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#Combined plot
combined_table <- train_table %>%
mutate(Reason = "With reasons") %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
rename(Accidents_With_Reasons = Amount) %>%
select(Month_Year, Accidents_With_Reasons) %>%
full_join(
test_table %>%
mutate(Reason = "Without reasons") %>%
mutate(Month_Year = floor_date(Start_Time, "month")) %>%
group_by(Month_Year) %>%
summarise(Amount = n(), .groups = "drop") %>%
rename(Accidents_Without_Reasons = Amount),
by = "Month_Year"
)
combined_table %>%
pivot_longer(cols = -Month_Year, names_to = "Reason", values_to = "Amount") %>%
ggplot(aes(x = Month_Year, y = Amount, color = Reason)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE) +
theme_minimal()
combined_table %>%
pivot_longer(cols = -Month_Year, names_to = "Reason", values_to = "Amount") %>%
ggplot(aes(x = Month_Year, y = Amount, color = Reason)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE)
View(combined_table)
test_table %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Humidity..., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
test_table %>%
Amount = n() %>%
ggplot(aes(x = Humidity..., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
test_table %>%
group_by(Humidity...) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Humidity..., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
top_accidents %>%
group_by(Humidity...) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Humidity..., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#By Visibility
top_accidents %>%
group_by(Visibility.mi.) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Visibility.mi., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#By temperature
top_accidents %>%
group_by(Temperature.F.) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Temperature.F., y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#By Weather
top_accidents %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Weather_Condition, y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
table(top_accidents$Weather_Condition)
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Reason = trimws(Reason)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Weather_Condition, y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Weather_Condition, y = Amount)) +
geom_point() +
geom_smooth(method = "loess", se = FALSE, color = "red")
#By Weather
table(top_accidents$Weather_Condition)
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Weather_Condition, y = Amount)) +
geom_point()
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
ggplot(aes(x = Weather_Condition, y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue")
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n())
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
arrange(-Amount)
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n()) %>%
arrange(-Amount) %>%
head(10)
save.image("C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)/Last enviroment.RData")
top_accidents %>%
separate_rows(Weather_Condition, sep="/") %>%
mutate(Weather_Condition = trimws(Weather_Condition)) %>%
group_by(Weather_Condition) %>%
summarise(Amount = n(), .groups = "drop") %>%
arrange(-Amount) %>%
head(10) %>%
ggplot(aes(x = reorder(Weather_Condition, -Amount), y = Amount)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
write.csv(test_table, file = "test_table.csv")
write.csv(train_table, file = "train_table.csv")
write.csv(top_accidents, file = "top_accidents.csv")
getwd()
setwd('C:/Users/Tomy/Desktop/Proyectos Personales/Project 4 - Traffic Accident Analysis (R)')
getwd()
